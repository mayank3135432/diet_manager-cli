@startuml Diet Assistant Class Diagram

' Abstract classes and interfaces
abstract class Food {
  -int id
  -String name
  -List<String> keywords
  -int calories
  -boolean isComposite
  +int getId()
  +String getName()
  +List<String> getKeywords()
  +int getCalories()
  +boolean isComposite()
}

interface CalorieCalculator {
  +int calculateTargetCalories(UserProfile user)
}

interface Command {
  +void execute()
  +void undo()
}

' Model classes
class BasicFood extends Food {
  +BasicFood(int id, String name, List<String> keywords, int calories)
}

class CompositeFood extends Food {
  -List<Ingredient> ingredients
  +CompositeFood(int id, String name, List<String> keywords, int calories, List<Ingredient> ingredients)
  +List<Ingredient> getIngredients()
}

class Ingredient {
  -int foodId
  -int servings
  +int getFoodId()
  +int getServings()
}

class LogEntry {
  -int foodId
  -int servings
  +int getFoodId()
  +int getServings()
}

class DailyLog {
  -int userId
  -LocalDate date
  -List<LogEntry> entries
  +int getUserId()
  +LocalDate getDate()
  +List<LogEntry> getEntries()
  +void addEntry(LogEntry entry)
}

class UserProfile {
  -int id
  -String name
  -String gender
  -int height
  -int age
  -String activityLevel
  -List<WeightHistory> weightHistory
  -CalorieGoal calorieGoal
  +getters and setters
}

class WeightHistory {
  -LocalDate date
  -double weight
  +LocalDate getDate()
  +double getWeight()
}

class CalorieGoal {
  -String method
  -int targetCalories
  +getters and setters
}

class BMRCalculator implements CalorieCalculator {
  +int calculateTargetCalories(UserProfile user)
}

class AlternateCalculator implements CalorieCalculator {
  +int calculateTargetCalories(UserProfile user)
}

class Database {
  -List<Food> foods
  -List<DailyLog> dailyLogs
  -List<UserProfile> users
  +getters and setters
}

class FoodDeserializer {
  +Food deserialize(JsonParser parser, DeserializationContext context)
}

' Service classes
class FoodService {
  -List<Food> foods
  -ObjectMapper mapper
  +void addBasicFood(String name, List<String> keywords, int calories)
  +void addCompositeFood(String name, List<Ingredient> ingredients)
  +Food getFoodById(int id)
  +List<Food> searchFood(List<String> keywords)
  +List<Food> getAllFoods()
  +void saveDatabase()
  +void loadDatabase()
}

class LogService {
  -List<DailyLog> dailyLogs
  -ObjectMapper mapper
  +void addFoodToLog(int userId, LocalDate date, int foodId, int servings)
  +void removeFoodFromLog(int userId, LocalDate date, int entryIndex)
  +List<LogEntry> getDailyLog(int userId, LocalDate date)
  +void saveLogs()
  +void loadLogs()
}

class UserProfileService {
  -List<UserProfile> users
  -ObjectMapper mapper
  +UserProfile getUserProfile(int userId)
  +void addUserProfile(UserProfile userProfile)
  +List<UserProfile> getAllUsers()
  +void updateActivityLevel(int userId, String activityLevel)
  +void updateAge(int userId, int age)
  +void updateCalorieCalculationMethod(int userId, String method)
  +void updateTargetCalories(int userId, int targetCalories)
  +void saveUserProfiles()
  +void loadUserProfiles()
}

' UI class
class YADAConsoleApp {
  -FoodService foodService
  -LogService logService
  -UserProfileService userProfileService
  -BufferedReader reader
  -UserProfile currentUser
  -LocalDate currentDate
  -Stack<Command> commandHistory
  +void start()
  -void displayMainMenu()
  -void undoLastAction()
  -void manageFoodDatabase()
  -void manageDailyLog()
  -void manageUserProfile()
  -void viewDailyNutritionSummary()
}

' Relationships
YADAConsoleApp *-- Command : defines and uses
YADAConsoleApp --> FoodService : uses
YADAConsoleApp --> LogService : uses
YADAConsoleApp --> UserProfileService : uses

FoodService --> Database : persists
LogService --> Database : persists
UserProfileService --> Database : persists

Food <|.. FoodDeserializer : deserializes

CompositeFood o-- "1..*" Ingredient : contains
Ingredient --> "1" Food : references by ID

DailyLog *-- "0..*" LogEntry : contains
LogEntry --> "1" Food : references by ID

UserProfile *-- "1..*" WeightHistory : contains
UserProfile *-- "1" CalorieGoal : contains
UserProfile --> CalorieCalculator : uses calculation from

@enduml